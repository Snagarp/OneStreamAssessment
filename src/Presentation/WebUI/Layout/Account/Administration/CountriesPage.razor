@page "/administration/account/identity/countries"
@using Application.DTO.Request.Account
@using Application.DTO.Response.Account
@using Application.DTO.Response.Country
@using Application.Extensions
@using Application.Service
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using NetcodeHub.Packages.Components
@using NetcodeHub.Packages.Components.Toast
@using System.Security.Claims
@inject ToastService toastService
@attribute [Authorize(Roles = Constant.Role.Admin)]
<div class="row">
    <div class="col-lg-12 col-md-12 clo-sm-12">
        <div class="card border-1 shadow-lg">
            <div class="card-header fw-bold text-info fs-2"> Available Countries </div>
            <div class="card-body">
                @if (Countries != null)
                {
                    <NetcodeHubDataGrid HeaderColor="@HeaderColor.Dark"
                                        HeaderFont="@HeaderFont.TimesNewRoman"
                                        HeaderSize="@HeaderSize.Large"
                                        ContentFont="@ContentFont.Cambria"
                                        DataGridFormat="@DataGridFormat.StripedSuccessColumns" CustomStyle="padding:10px">
                        <HeaderTemplate>
                            <th>COUNTRY NAME</th>
                            <th>ISO3166_Countrycode_2</th>
                            <th>ISO3166_CountryCode_3</th>
                        </HeaderTemplate>
                        <ContentTemplate>
                            @foreach (var country in Countries)
                            {
                                <tr>
                                    <td>@country.CountryName</td>
                                    <td>@country.CountryCode2</td>
                                    <td>@country.CountryCode3</td>                                   
                                </tr>
                            }
                        </ContentTemplate>
                    </NetcodeHubDataGrid>
                }
                else
                {
                    <em class="text-success text-center fw-bold shadow-lg border-1">Loading data...</em>
                }
            </div>
        </div>
    </div>
</div>
<Toast @ref="toastService.ToastComponent" IconClass="bi bi-check" Persist="true" Duration=2000 />
@code {
    [CascadingParameter] public Task<AuthenticationState>? AuthState { get; set; }
    private IEnumerable<GetCountriesResponseDTO>? Countries { get; set; }
    private IEnumerable<GetRoleDTO>? DefaultRoles { get; set; }
    ClaimsPrincipal? User;
    
    private async Task GetCountries()
    {
        const string jwtToken = "C4CC0DE5-139E-4557-91F0-FAA7DEC2F7DB";
        Countries = await countryService.GetCountries(jwtToken);
    }

    private async Task GetDefaultRoles() => DefaultRoles = await accountService.GetRolesAsync();
    private async Task GetAdminInfo() => User = (await AuthState!).User;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await GetAdminInfo();
            await GetCountries();
            await GetDefaultRoles();
        }
        catch { }
    }
}